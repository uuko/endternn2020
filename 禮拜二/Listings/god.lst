C51 COMPILER V9.57.0.0   GOD                                                               06/22/2020 10:03:43 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE GOD
OBJECT MODULE PLACED IN .\Objects\god.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE god.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\god.l
                    -st) TABS(2) OBJECT(.\Objects\god.obj)

line level    source

   1          #include "AT89X52.H"   //暫存器及組態定義
   2          sfr  Data=0x80;//P0資料BUS輸出
   3          
   4          sbit RS=0x96;  //P16 LCD指令/資料控制,RS=0指令，RS=1資料
   5                         //LCD讀取/寫入控制,R/W=GND寫入
   6          sbit EN=0x97;  //P17 LCD致能輸出,EN=0禁能LCD，EN=1致能LCD
   7          
   8          sbit SSLED0=0x90; //P10七段顯示器個位數選擇輸出
   9          sbit SSLED1=0x91; //P11七段顯示器十位數選擇輸出
  10          sbit SSLED2=0x92; //P12七段顯示器百位數選擇輸出
  11          sbit SSLED3=0x93; //P13七段顯示器千位數選擇輸出
  12          
  13          code unsigned char Table[] //七段顯示器0~9數碼資料
  14          ={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77};
  15          sbit KEY=P3^3; //按鍵開關由P32輸入
  16          char word1=0,word2=4,word3=1,word4=10; //設定
  17          void Display(char scan); //七段顯示器顯示
  18          void Display2(char scan); //七段顯示器顯示
  19          
  20          char code mes[]="2020\00006\00116\002";//2020年06月16日
  21          char code Table2[]={
  22           0x10,0x1f,0x02,0x0f,0x0a,0xff,0x02,0x00, //年
  23           0x0f,0x09,0x0f,0x09,0x0f,0x09,0x13,0x00, //月
  24           0x0f,0x09,0x09,0x0f,0x09,0x09,0x0f,0x00};//日
  25          char  scan=50;
  26          char hor=23,min=59,sec=58;//設定時、分、秒初值
  27          char i;    //陣列資料計數
  28           unsigned char scount=0;
  29          void LCD_Display();
  30          
  31          main()
  32          {
  33   1        EA=1;          //致能整體中斷
  34   1        EX0=1; EX1=1; //致能外部INT0中斷及INT1中斷
  35   1        IT0=0; IT1=1; //設定INT0腳準位觸發中斷及INT1腳負緣觸發中斷
  36   1        //PX1=1;        //設定INT1中斷優先
  37   1        //PT0=1;        //設定Timer0中斷優先
  38   1        
  39   1        TMOD = 0x01; /*0000 0001，設定Timer0為mode1內部計時
  40   1                        bit3:GATE=0,不使用外部INT0接腳
  41   1                  bit2:C/T0=0,內部計時 
  42   1                  bit1-0:MODE=01,使用模式1工作*/
  43   1         TL0=65536-10; TH0=(65536-10)>>8; //設定Timer0計數值
  44   1         P0=0;          //P0輸出0
  45   1         EA=1;ET0=1;    //致能Timer0中斷
  46   1         TR0=1;         //啟動Timer0開始計時
  47   1        
  48   1        LCD_init();   //重置及清除LCD
  49   1          for(i=0x0;i<=23;i++) //寫入年月日字型 
  50   1           {
  51   2             LCD_Cmd(0x40+i);    //指定CGRAM位址  
  52   2             LCD_Data(Table2[i]); //寫入CGRAM資料  
  53   2           } 
  54   1          LCD_Cmd(0x82);     //指定第一行顯示   
C51 COMPILER V9.57.0.0   GOD                                                               06/22/2020 10:03:43 PAGE 2   

  55   1          for(i=0;i<11;i++) LCD_Data(mes[i]);//顯示年月日
  56   1          
  57   1          while(1)
  58   1         {
  59   2          Display(scan);
  60   2           LCD_Display();
  61   2           /*
  62   2          LCD_Cmd(0xC4);        //由第一行開始顯示 
  63   2          LCD_Data(hor/10+'0'); //時的十位數到LCD顯示
  64   2          LCD_Data(hor%10+'0'); //時的個位數到LCD顯示
  65   2          LCD_Data(':');
  66   2          
  67   2          LCD_Data(min/10+'0'); //分的十位數到LCD顯示
  68   2          LCD_Data(min%10+'0'); //分的個位數到LCD顯示
  69   2          LCD_Data(':');
  70   2          
  71   2          LCD_Data(sec/10+'0'); //秒的十位數到LCD顯示
  72   2          LCD_Data(sec%10+'0'); //秒的個位數到LCD顯示
  73   2           */
  74   2          /*
  75   2          if(hor!=23)
  76   2          {
  77   2            Delay_ms(1000);
  78   2            sec++;              //秒加一
  79   2            if (sec < 60) continue; //若秒小於60重覆顯示   
  80   2            sec=0; min++;       //秒等於60則令秒=0，分加一
  81   2            if (min < 60) continue; //若分小於60重覆顯示   
  82   2            min=0; hor++;       //若分等於60則令分=0，時加一
  83   2            if (hor <24)  continue; //若時小於24重覆顯示
  84   2            hor=0;min=0; sec=0;//若時等於24則令時、分、秒=0 
  85   2          }
  86   2          else
  87   2          {
  88   2            if(KEY==0)
  89   2            {
  90   2              
  91   2              sec++;              //秒加一
  92   2              Delay_ms(200);
  93   2              if (sec < 60) continue; //若秒小於60重覆顯示   
  94   2              sec=0; min++;       //秒等於60則令秒=0，分加一
  95   2              if (min < 60) continue; //若分小於60重覆顯示   
  96   2              min=0; hor++;       //若分等於60則令分=0，時加一
  97   2              if (hor <24)  continue; //若時小於24重覆顯示
  98   2              hor=0;min=0; sec=0;//若時等於24則令時、分、秒=0 
  99   2            }
 100   2          }*/
 101   2          }
 102   1         
 103   1        
 104   1         //第1小題部分
 105   1        while(1){
 106   2          Display(scan);
 107   2          /*
 108   2          while(KEY==0)
 109   2          {
 110   2            Display2(scan);
 111   2          }
 112   2          */
 113   2        }
 114   1        
 115   1      }
 116          /*********************************************/
C51 COMPILER V9.57.0.0   GOD                                                               06/22/2020 10:03:43 PAGE 3   

 117          void EX0_int(void) interrupt 0   //INT0中斷函數0
 118          {
 119   1        Display2(scan);
 120   1      }
 121          /*********************************************/
 122          void EX1_int(void) interrupt 2   //INT1中斷函數2
 123          {
 124   1        if(hor==23){
 125   2            sec++;               //秒加一
 126   2            if (sec == 60) { //若秒小於60到loop處   
 127   3              sec=0; min++;        //秒等於60則令秒=0，分加一
 128   3              if (min == 60) { //若分小於60到loop處   
 129   4                min=0; hor++;        //若分等於60則令分=0，時加一
 130   4                if (hor == 24) { //若時小於24到loop處
 131   5                  hor=0;min=0; sec=0; //若時等於24則令時、分、秒=0
 132   5                  }
 133   4              }
 134   3            }
 135   2          }
 136   1        else{
 137   2          TR0=!TR0;
 138   2        }
 139   1      }
 140          /************************************************************/
 141          void T0_int(void) interrupt 1  //Timer0中斷函數
 142            {
 143   1          if(hor!=23){
 144   2            TL0=65536-46080; TH0=(65536-46080)>>8; //重新設定Timer0計數值
 145   2            //P0++;    //P0遞加輸出
 146   2            scount++;
 147   2            if(scount==20)
 148   2            {
 149   3              scount=0;
 150   3              sec++;               //秒加一
 151   3              if (sec == 60) { //若秒小於60到loop處   
 152   4                sec=0; min++;        //秒等於60則令秒=0，分加一
 153   4                if (min == 60) { //若分小於60到loop處   
 154   5                  min=0; hor++;        //若分等於60則令分=0，時加一
 155   5                  if (hor ==24) { //若時小於24到loop處
 156   6                    hor=0;min=0; sec=0; //若時等於24則令時、分、秒=0
 157   6                    }
 158   5                }
 159   4              }
 160   3            }
 161   2          }
 162   1          //LCD_Display();
 163   1        }
 164          //***************************************************  
 165          void Display(char scan) //四位數七段顯示器顯示步數   
 166          {  
 167   1        while(scan--) //重覆掃描次數 
 168   1         {
 169   2           SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒
 170   2         Data=~Table[word1];//讀取秒個位數數碼資料輸出
 171   2           SSLED0=0;      //選擇個位數顯示器
 172   2           Delay_ms(1);   //掃描延時  
 173   2             
 174   2         SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒          
 175   2           Data=~Table[word2];//讀取秒十位數數碼資料輸出
 176   2           SSLED1=0;      //選擇十位數顯示器
 177   2           Delay_ms(1);   //掃描延時
 178   2             
C51 COMPILER V9.57.0.0   GOD                                                               06/22/2020 10:03:43 PAGE 4   

 179   2         SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒                     
 180   2           Data=~Table[word3];//讀取分個數數碼資料輸出
 181   2           SSLED2=0;      //選擇百位數顯示器
 182   2           Delay_ms(1);   //掃描延時
 183   2             
 184   2         SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒
 185   2           Data=~Table[word4];//讀取分十位數數碼資料輸出
 186   2           SSLED3=0;      //選擇千位數顯示器
 187   2           Delay_ms(1);   //掃描延時
 188   2         }     
 189   1      }
 190          //***************************************************  
 191          void Display2(char scan) //四位數七段顯示器顯示步數  
 192          {  
 193   1        while(scan--) //重覆掃描次數 
 194   1         {
 195   2           SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒
 196   2         Data=~(Table[word1]|0x80);//讀取秒個位數數碼資料輸出
 197   2           SSLED0=0;      //選擇個位數顯示器
 198   2           Delay_ms(1);   //掃描延時  
 199   2             
 200   2         SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒          
 201   2           Data=~(Table[word2]|0x80);//讀取秒十位數數碼資料輸出
 202   2           SSLED1=0;      //選擇十位數顯示器
 203   2           Delay_ms(1);   //掃描延時
 204   2             
 205   2         SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒                     
 206   2           Data=~(Table[word3]|0x80);//讀取分個數數碼資料輸出
 207   2           SSLED2=0;      //選擇百位數顯示器
 208   2           Delay_ms(1);   //掃描延時
 209   2             
 210   2         SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒
 211   2           Data=~(Table[word4]|0x80);//讀取分十位數數碼資料輸出
 212   2           SSLED3=0;      //選擇千位數顯示器
 213   2           Delay_ms(1);   //掃描延時
 214   2         }     
 215   1      }
 216          //***********************************************************
 217          void LCD_Display()
 218          {
 219   1          LCD_Cmd(0xC4);        //由第一行開始顯示 
 220   1          LCD_Data(hor/10+'0'); //時的十位數到LCD顯示
 221   1          LCD_Data(hor%10+'0'); //時的個位數到LCD顯示
 222   1          LCD_Data(':');
 223   1          
 224   1          LCD_Data(min/10+'0'); //分的十位數到LCD顯示
 225   1          LCD_Data(min%10+'0'); //分的個位數到LCD顯示
 226   1          LCD_Data(':');
 227   1          
 228   1          LCD_Data(sec/10+'0'); //秒的十位數到LCD顯示
 229   1          LCD_Data(sec%10+'0'); //秒的個位數到LCD顯示
 230   1      }
 231          /***********************************************************
 232          *函數名稱: LCD_Data
 233          *功能描述: 傳送資料到文字型LCD
 234          *輸入參數：dat
 235          ************************************************************/
 236          void LCD_Data(char dat)  //傳送資料到LCD
 237          {
 238   1          Data=dat; //資料送到BUS
 239   1          RS=1;EN=1;//資料寫入到LCD內
 240   1          Delay_ms(1);   //LCD等待寫入完成
C51 COMPILER V9.57.0.0   GOD                                                               06/22/2020 10:03:43 PAGE 5   

 241   1          EN=0;          //禁能LCD    
 242   1      }
 243          /***************************************************************
 244          *函數名稱: LCD_Cmd
 245          *功能描述: 傳送命令到文字型LCD
 246          *輸入參數：Cmd
 247          ************************************************************/
 248          void LCD_Cmd(unsigned char Cmd) //傳送命令到LCD
 249          {
 250   1          Data=Cmd;  //命令送到BUS
 251   1          RS=0;EN=1; //命令寫入到LCD內
 252   1          Delay_ms(1);    //LCD等待寫入完成     
 253   1          EN=0;           //禁能LCD
 254   1      }
 255          /***************************************************************
 256          *函數名稱: LCD_init
 257          *功能描述: 啟始化文字型LCD
 258          *****************************************************************/
 259          void LCD_init(void)    //LCD的啟始程式  
 260          {
 261   1          LCD_Cmd(0x38);/*0011 1000,8bit傳輸,顯示2行,5*7字型
 262   1                          bit4:DL=1,8bit傳輸,
 263   1                          bit3:N=1,顯示2行
 264   1                          bit2:F=0,5*7字型*/    
 265   1          LCD_Cmd(0x0c);/*0000 1100,顯示幕ON,不顯示游標,游標不閃爍
 266   1                          bit2:D=1,顯示幕ON
 267   1                          bit1:C=0,不顯示游標
 268   1                        bit0:B=0,游標不閃爍*/
 269   1          LCD_Cmd(0x06);/*0000 0110,//顯示完游標右移,游標移位禁能 
 270   1                          bit1:I/D=1,顯示完游標右移,
 271   1                          bit0:S=0,游標移位禁能*/  
 272   1          LCD_Cmd(0x01); //清除顯示幕  
 273   1          LCD_Cmd(0x02); //游標回原位  
 274   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    789    ----
   CONSTANT SIZE    =     47    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
