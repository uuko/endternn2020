C51 COMPILER V9.57.0.0   0616                                                              06/16/2020 16:32:59 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE 0616
OBJECT MODULE PLACED IN .\Objects\0616.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 0616.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\0616
                    -.lst) TABS(2) OBJECT(.\Objects\0616.obj)

line level    source

   1          
   2          #include "..\AT89X52.H"   
   3          sfr  Data=0x80;
   4          sbit SSLED0=0x90; 
   5          sbit SSLED1=0x91; 
   6          sbit SSLED2=0x92; 
   7          sbit SSLED3=0x93; 
   8          unsigned char scount;
   9          unsigned char  hor=23,min=59,sec=58;//設定時、分、秒初值
  10          unsigned char code Table[] 
  11            ={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  12              0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};
  13          char code mes[]="2020\00006\00116\002";
  14          char code day[]={
  15           0x10,0x1f,0x02,0x0f,0x0a,0xff,0x02,0x00, 
  16           0x0f,0x09,0x0f,0x09,0x0f,0x09,0x13,0x00, 
  17           0x0f,0x09,0x09,0x0f,0x09,0x09,0x0f,0x00};
  18          unsigned char i;  
  19          unsigned char scan;  //掃描次數
  20          sbit RS=0x96;  //P16 LCD指令/資料控制,RS=0指令，RS=1資料
  21                           //LCD讀取/寫入控制,R/W=GND寫入
  22          sbit EN=0x97;  //P17 LCD致能輸出,EN=0禁能LCD，EN=1致能LCD
  23          void showClock();
  24          main() 
  25          {
  26   1        EA=1;IT0=0;EX0=1;
  27   1        EX1=1;IT1=1;
  28   1        scan=10;
  29   1        LCD_init();    //重置及清除LCD  
  30   1        LCD_Cmd(0x85); //游標由第一行第5個字開始顯示  
  31   1        for(i=0x0;i<=23;i++) //寫入年月日字型 
  32   1        {
  33   2           LCD_Cmd(0x40+i);    //指定CGRAM位址  
  34   2           LCD_Data(day[i]); //寫入CGRAM資料  
  35   2        } 
  36   1        LCD_Cmd(0x80);     //指定第一行顯示   
  37   1        for(i=0;i<11;i++) LCD_Data(mes[i]);//顯示年月日
  38   1        while(1)     //重覆執行
  39   1        {
  40   2          for(scan=0;scan<50;scan++) //重覆掃描次數 
  41   2          {
  42   3             SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒
  43   3             Data=~Table[0];//讀取個位數碼資料輸出
  44   3             SSLED0=0;       //選擇個位數顯示器
  45   3             Delay_ms(1);   //掃描延時  
  46   3              
  47   3             SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒          
  48   3             Data=~Table[4];//讀取十位數碼資料輸出
  49   3             SSLED1=0;       //選擇十位數顯示器
  50   3             Delay_ms(1);   //掃描延時
  51   3              
  52   3             SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒                     
  53   3             Data=~Table[1];//讀取百位數碼資料輸出
  54   3             SSLED2=0;       //選擇百位數顯示器
C51 COMPILER V9.57.0.0   0616                                                              06/16/2020 16:32:59 PAGE 2   

  55   3             Delay_ms(1);   //掃描延時
  56   3             
  57   3             SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒
  58   3             Data=~Table[10];//讀取千位數碼資料輸出
  59   3             SSLED3=0;       //選擇千位數顯示器
  60   3             Delay_ms(1);   //掃描延時
  61   3          }    
  62   2          while((sec==0)&&(hor==0)&&(min==0)){    
  63   3              showClock();
  64   3              TMOD = 0x01; /*0000 0001，設定Timer0為mode1內部計時
  65   3                        bit3:GATE=0,不使用外部INT0接腳
  66   3                  bit2:C/T0=0,內部計時 
  67   3                  bit1-0:MODE=01,使用模式1工作*/
  68   3               TL0=65536-10; TH0=(65536-10)>>8; //設定Timer0計數值
  69   3               P0=0;          //P0輸出0
  70   3               EA=1;ET0=1;    //致能Timer0中斷
  71   3               TR0=1;         //啟動Timer0開始計時
  72   3          } 
  73   2          LCD_Cmd(0xC5); //游標由第二行第5個字開始顯示  
  74   2          LCD_Data(hor/10+'0'); //時的十位數到LCD顯示
  75   2          LCD_Data(hor%10+'0'); //時的個位數到LCD顯示
  76   2          LCD_Data(':');
  77   2          
  78   2          LCD_Data(min/10+'0'); //分的十位數到LCD顯示
  79   2          LCD_Data(min%10+'0'); //分的個位數到LCD顯示
  80   2          LCD_Data(':');
  81   2          
  82   2          LCD_Data(sec/10+'0'); //秒的十位數到LCD顯示
  83   2          LCD_Data(sec%10+'0'); //秒的個位數到LCD顯示
  84   2                
  85   2          if (sec < 60) continue; //若秒小於60重覆顯示   
  86   2          sec=0; min++;       //秒等於60則令秒=0，分加一
  87   2          if (min < 60) continue; //若分小於60重覆顯示   
  88   2          min=0; hor++;       //若分等於60則令分=0，時加一
  89   2          if (hor <24)  continue; //若時小於24重覆顯示
  90   2          hor=0;min=0; sec=0;//若時等於24則令時、分、秒=0 
  91   2            
  92   2         } 
  93   1      }
  94          void showClock(){
  95   1        
  96   1          LCD_Cmd(0xC5); //游標由第二行第5個字開始顯示  
  97   1          LCD_Data(hor/10+'0'); //時的十位數到LCD顯示
  98   1          LCD_Data(hor%10+'0'); //時的個位數到LCD顯示
  99   1          LCD_Data(':');
 100   1          
 101   1          LCD_Data(min/10+'0'); //分的十位數到LCD顯示
 102   1          LCD_Data(min%10+'0'); //分的個位數到LCD顯示
 103   1          LCD_Data(':');
 104   1          
 105   1          LCD_Data(sec/10+'0'); //秒的十位數到LCD顯示
 106   1          LCD_Data(sec%10+'0'); //秒的個位數到LCD顯示
 107   1      
 108   1      }
 109          void T0_int(void) interrupt 1  //Timer0中斷函數
 110          {
 111   1          TL0=(65536-46080)%256; TH0=(65536-46080)/256; //重新設定Timer0計數值
 112   1          //P0++;    //P0遞加輸出
 113   1          scount++;
 114   1          if(scount==20)
 115   1          {
 116   2            scount=0;
C51 COMPILER V9.57.0.0   0616                                                              06/16/2020 16:32:59 PAGE 3   

 117   2            sec++;          //秒加一
 118   2            if (sec == 60) { //若秒小於60到loop處   
 119   3              sec=0; min++;        //秒等於60則令秒=0，分加一
 120   3              if (min == 60) { //若分小於60到loop處   
 121   4                min=0; hor++;        //若分等於60則令分=0，時加一
 122   4                if (hor ==24) { //若時小於24到loop處
 123   5                  hor=0;min=0; sec=0; //若時等於24則令時、分、秒=0
 124   5                }
 125   4              }
 126   3            }
 127   2          }
 128   1      }
 129          void EX1_int(void) interrupt 2 {
 130   1         TR0=!TR0;   
 131   1         if(hor==23){
 132   2          LCD_Cmd(0xC5); //游標由第二行第5個字開始顯示  
 133   2          sec++;      
 134   2          Delay_ms(50);
 135   2          if(sec>59){
 136   3            sec=0;min++;
 137   3            if(min>59){
 138   4              hor++;min=0;
 139   4              if(hor>23){
 140   5                hor=0;min=0;sec=0;
 141   5              }
 142   4            }
 143   3          }
 144   2        }
 145   1      }
 146          /***********************************************************
 147          *函數名稱: LCD_Data
 148          *功能描述: 傳送資料到文字型LCD
 149          *輸入參數：dat
 150          ************************************************************/
 151          void LCD_Data(char dat)  //傳送資料到LCD
 152          {
 153   1          Data=dat; //資料送到BUS
 154   1          RS=1;EN=1;//資料寫入到LCD內
 155   1          Delay_ms(1);   //LCD等待寫入完成
 156   1          EN=0;          //禁能LCD    
 157   1      }
 158          /***************************************************************
 159          *函數名稱: LCD_Cmd
 160          *功能描述: 傳送命令到文字型LCD
 161          *輸入參數：Cmd
 162          ************************************************************/
 163          void LCD_Cmd(unsigned char Cmd) //傳送命令到LCD
 164          {
 165   1          Data=Cmd;  //命令送到BUS
 166   1          RS=0;EN=1; //命令寫入到LCD內
 167   1          Delay_ms(1);    //LCD等待寫入完成     
 168   1          EN=0;           //禁能LCD
 169   1      }
 170          /***************************************************************
 171          *函數名稱: LCD_init
 172          *功能描述: 啟始化文字型LCD
 173          *****************************************************************/
 174          void LCD_init(void)    //LCD的啟始程式  
 175          {
 176   1          LCD_Cmd(0x38);/*0011 1000,8bit傳輸,顯示2行,5*7字型
 177   1                          bit4:DL=1,8bit傳輸,
 178   1                          bit3:N=1,顯示2行
C51 COMPILER V9.57.0.0   0616                                                              06/16/2020 16:32:59 PAGE 4   

 179   1                          bit2:F=0,5*7字型*/    
 180   1          LCD_Cmd(0x0c);/*0000 1100,顯示幕ON,不顯示游標,游標不閃爍
 181   1                          bit2:D=1,顯示幕ON
 182   1                          bit1:C=0,不顯示游標
 183   1                        bit0:B=0,游標不閃爍*/
 184   1          LCD_Cmd(0x06);/*0000 0110,//顯示完游標右移,游標移位禁能 
 185   1                          bit1:I/D=1,顯示完游標右移,
 186   1                          bit0:S=0,游標移位禁能*/  
 187   1          LCD_Cmd(0x01); //清除顯示幕  
 188   1          LCD_Cmd(0x02); //游標回原位  
 189   1      }
 190          
 191          void EX0_int(void) interrupt 0 {
 192   1        
 193   1        
 194   1           for(scan=0;scan<10;scan++) //重覆掃描次數 
 195   1            {
 196   2             SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒
 197   2            
 198   2             Data=~(Table[0]|0x80);//讀取個位數碼資料輸出
 199   2             SSLED0=0;       //選擇個位數顯示器
 200   2             Delay_ms(1);   //掃描延時  
 201   2             
 202   2             SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒          
 203   2      
 204   2             Data=~(Table[4]|0x80);//讀取十位數碼資料輸出
 205   2             SSLED1=0;       //選擇十位數顯示器
 206   2             Delay_ms(1);   //掃描延時
 207   2             
 208   2             SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒                     
 209   2      
 210   2             Data=~(Table[1]|0x80);//讀取百位數碼資料輸出
 211   2             SSLED2=0;       //選擇百位數顯示器
 212   2             Delay_ms(1);   //掃描延時
 213   2             
 214   2             SSLED0=SSLED1=SSLED2=SSLED3=1; //遮沒
 215   2             Data=~(Table[10]|0x80);//讀取千位數碼資料輸出
 216   2             SSLED3=0;       //選擇千位數顯示器
 217   2             Delay_ms(1);   //掃描延時
 218   2           }     
 219   1      }
 220          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    794    ----
   CONSTANT SIZE    =     52    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
